name: Create Release

on:
  push:
    branches: [main]

env:
  BUILD_CONFIGURATION: Release
  SOURCE_DIRECTORY: ./app

jobs:
  build:
    name: Create new Release
    if: "!contains(join(github.event.commits.*.message), '+norelease')"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup .NET 6
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      - name: Setup GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.11
        with:
          versionSpec: '5.x'

      - name: Execute GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.11
        with:
          useConfigFile: true

      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: yarn install
        working-directory: ./app
        run: yarn install --frozen-lockfile

      - name: yarn tsc
        working-directory: ./app
        run: yarn tsc

      - name: yarn build
        working-directory: ./app
        run: yarn build

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to ACR
        uses: docker/login-action@v1
        with:
          registry: teamcloud.azurecr.io
          username: TeamCloud
          password: ${{ secrets.TEAMCLOUD_ACR_PASSWORD }}

      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./app
          file: ./app/packages/backend/Dockerfile
          tags: |
            teamcloud.azurecr.io/teamcloud-dev/backstage:${{ steps.gitversion.outputs.assemblySemVer }}
            teamcloud.azurecr.io/teamcloud-dev/backstage:latest
          build-args: |
            image_version=${{ steps.gitversion.outputs.assemblySemVer }}

      - name: Create Release
        uses: actions/github-script@v4
        with:
          script: |

            const releaseResult = await github.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: 'v${{ steps.gitversion.outputs.majorMinorPatch }}',
              name: 'v${{ steps.gitversion.outputs.majorMinorPatch }}',
              prerelease: false,
              body: ''
            });
